function strongclassifier = init_stablestrongclassifier(patch, rawimage)
    global parameter;
    % haarfeature is global variable
    % in function generaterandomfeature the generateed haar feature is
    % stored in haarfeature
    % then init the gaussian distribution
    strongclassifier = struct('area', [] , ...
                              'type', [] , ...
                              'location', [] , ...
                              'weight', [] , ...
                              'index', [] , ...
                              'posgaussian', [] , ...
                              'neggaussian', [] , ...
                              'correct', [] , ...
                              'wrong', [] , ...
                              'weightvalue', []);
    for i = 1:parameter.numselectors
        strongclassifier(i) = generaterandomfeature(parameter.numweakclassifiers * 10 , patch, parameter.minarea);
        strongclassifier(i) = stablehaarfeature(strongclassifier(i), rawimage, patch, parameter.numofaffinesample, parameter.affineparameter);
    end
   % gaussiandistributioninit( [haarfeature.mean, haarfeature.sigma]);
end